#!/bin/bash
set -e -o pipefail
bin=$(dirname $0)
base=$bin/..

function usage() {
    echo "usage: $(basename $0) [--compare] [--freeze-as name] [--skip-exports] <output-directory>"
}

version_name=latest
run_exports=yes

for arg; do
    case "$arg" in
        -h|--help)
            usage
            exit 0;;
        --compare)
            export_args="--compare"
            shift;;
        --freeze-as)
            version_name="$2"
            version_args="--frozen"
            shift 2;;
        --skip-exports)
            run_exports=no
            shift;;
        --)
            shift;
            break;;
    esac
done

output=$1
if [[ -z $output ]]; then
    usage
    exit 1
fi

if [[ $version_name == latest ]]; then
    template_args="--find-versions=$output/frozen"
else
    output=$output/frozen/$version_name
fi

exports=$output/exports/

mkdir -p $output

echo "Output to: $output"

echo "Writing version metadata: $version_name"
$bin/version-metadata --name $version_name $version_args > $output/version.json

if [[ $run_exports == yes ]]; then
    echo "Exporting data"
    $bin/export $export_args $exports

    echo "Exporting BED for Genome Browser"
    mkdir -p $exports/tracks
    $bin/export-bed > $exports/tracks/isdb.bed
fi

echo "Caching PubMed info"
mkdir -p $base/cache/
$bin/cache-pubmed-info > $base/cache/pubmed.json

echo "Caching current Known Issues"
if ! $bin/cache-known-issues > $base/cache/issues.json; then
    echo "Warning: Couldn't fetch known issues, but proceeding anyway."
    echo "Hint: Look at the messages between this line and the line «Caching current Known Issues» above."
fi

echo "Copying static assets"
cp -a $base/web/static $output

echo "Rendering templates"
$bin/fill-template \
    --output=$output \
    --find-exports=$exports \
    $template_args \
    --var version@$output/version.json \
    --var pubmed_info@$base/cache/pubmed.json \
    --var issues@$base/cache/issues.json \
    $base/web/*.tt

echo "Generating documentation"
if ! $bin/generate-documentation $output; then
    echo "Warning: Couldn't generate documentation, but proceeding anyway"
fi
