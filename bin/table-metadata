#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use 5.010;
use open qw< :std :encoding(UTF-8) >;
use FindBin qw< $Bin >;
use lib "$Bin/../lib", "$Bin/../local/lib/perl5";
use ISDB::Schema;
use JSON::MaybeXS;
use List::Util qw< pairgrep >;

my @tables =
    map { table_metadata($_) }
   sort { lc($a->table) cmp lc($b->table) }
    map { ISDB::Schema->class($_) or die "Unknown result class '$_'\n" }
        ISDB::Schema->sources;

say JSON->new->canonical->pretty->encode(\@tables);
exit;

sub table_metadata {
    my $model   = shift;
    my $colmeta = $model->columns_info;
    return {
        name    => $model->table,
        type    => ($model->table_class =~ /View/ ? 'view' : 'table'),
        columns => [
            map { column_metadata($_, $colmeta->{$_}) }
                $model->columns
        ],
    };
}

sub column_metadata {
    my $col  = shift;
    my $meta = shift;
    $meta = {
        name => $col,
        pairgrep { $a !~ /^_/ } %$meta, # skip private keys
    };

    # Unify "character varying" and "varchar" for consistency
    $meta->{data_type} =~ s/character varying/varchar/;

    return $meta;
}
